const db = require('../db');
const crypto = require('crypto');
const jwt = require('jsonwebtoken');

const JWT_SECRET = process.env.JWT_SECRET || 'default_secret';

// Login
exports.login = async (req, res) => {
  const { email, password } = req.body;
  const hashedPassword = crypto.createHash('sha256').update(password).digest('hex');
  try {
    const result = await db.query(
      'SELECT * FROM users WHERE email = $1 AND password = $2',
      [email, hashedPassword]
    );
    if (result.rows.length > 0) {
      const user = result.rows[0];
      const token = jwt.sign(
        { id: user.id, email: user.email, role: user.role },
        JWT_SECRET,
        { expiresIn: '1d' }
      );
      res.json({ token });
    } else {
      res.status(401).json({ error: 'Invalid email or password' });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Server error' });
  }
};

// Register
exports.register = async (req, res) => {
  const { full_name, user_id, email, password } = req.body;
  const hashedPassword = crypto.createHash('sha256').update(password).digest('hex');
  try {
    await db.query(
      'INSERT INTO users (full_name, user_id, email, password, role) VALUES ($1, $2, $3, $4, $5)',
      [full_name, user_id, email, hashedPassword, 'user']
    );
    res.json({ message: 'User registered successfully' });
  } catch (error) {
    console.error(error);
    res.status(500).json({ error: 'Server error' });
  }
};
